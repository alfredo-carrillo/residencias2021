from django.db import models
from django.db.models.deletion import CASCADE
from employees.models import Employee
from business.models import Business
# Create your models here.

payment_choices = (
    ('01', 'Efectivo'),
    ('02', 'Cheque nominativo'),
    ('03', 'Transferencia electrónica de fondos'),
    ('04', 'Tarjeta de crédito'),
    ('05', 'Monedero electrónico'),
    ('06', 'Dinero electrónico'),
    ('08', 'Vales de despensa'),
    ('12', 'Dación en pago'),
    ('13', 'Pago por subrogación'),
    ('14', 'Pago por consignación'),
    ('15', 'Condonación'),
    ('17', 'Compensación'),
    ('23', 'Novación'),
    ('24', 'Confusión'),
    ('25', 'Remisión de deuda'),
    ('26', 'Prescripción o caducidad'),
    ('27', 'A satisfacción del acreedor'),
    ('28', 'Tarjeta de débito'),
    ('29', 'Tarjeta de servicios'),
    ('30', 'Aplicación de anticipos'),
    ('99', 'Por definir')
)
coin_choices = (
    ('AED', 'Dirham de los Emiratos Árabes Unidos'),
    ('AFN', 'Afgani afgano'),
    ('ALL', 'Lek albanés'),
    ('AMD', 'Dram armenio'),
    ('ANG', 'Florín antillano neerlandés'),
    ('AOA', 'Kwanza angoleño'),
    ('ARS', 'Peso argentino'),
    ('AUD', 'Dólar australiano'),
    ('AWG', 'Florín arubeño'),
    ('AZN', 'Manat azerbaiyano'),
    ('BAM', 'Marco convertible de Bosnia-Herzegovina'),
    ('BBD', 'Dólar de Barbados'),
    ('BDT', 'Taka de Bangladés'),
    ('BGN', 'Lev búlgaro'),
    ('BHD', 'Dinar bahreiní'),
    ('BIF', 'Franco burundés'),
    ('BMD', 'Dólar de Bermuda'),
    ('BND', 'Dólar de Brunéi'),
    ('BOB', 'Boliviano'),
    ('BOV', 'Mvdol boliviano'),
    ('BRL', 'Real brasileño'),
    ('BSD', 'Dólar bahameño'),
    ('BTN', 'Ngultrum de Bután'),
    ('BWP', 'Pula de Botsuana'),
    ('BYR', 'Rublo bielorruso'),
    ('BZD', 'Dólar de Belice'),
    ('CAD', 'Dólar canadiense'),
    ('CDF', 'Franco congoleño o congolés'),
    ('CHF', 'Franco Suizo'),
    ('CLF', 'Unidades de fomento chilenas'),
    ('CLP', 'Peso chileno'),
    ('CNY', 'Yuan chino'),
    ('COP', 'Peso colombiano'),
    ('COU', 'Unidad de valor real colombiana'),
    ('CRC', 'Colón costarricense'),
    ('CSD', 'Dinar serbio'),
    ('CUC', 'Peso cubano convertible'),
    ('CUP', 'Peso cubano'),
    ('CVE', 'Escudo caboverdiano'),
    ('CZK', 'Koruna checa'),
    ('DJF', 'Franco yibutiano'),
    ('DKK', 'Corona danesa'),
    ('DOP', 'Peso dominicano'),
    ('DZD', 'Dinatr argelino'),
    ('EGP', 'Libra egipcia'),
    ('ERN', 'Nakfa eritreo'),
    ('ETB', 'Birr etíope'),
    ('EUR', 'Euro'),
    ('FJD', 'Dólar fiyiano'),
    ('FKP', 'Libra malvinense'),
    ('GBP', 'Libra esterlina (libra de Gran Bretaña)'),
    ('GEL', 'Lari georgiano'),
    ('GHS', 'Cedi ghanés'),
    ('GIP', 'Libra de Gibraltar'),
    ('GMD', 'Dalasi gambiano'),
    ('GNF', 'Franco guineano'),
    ('GTQ', 'Quetzal guatemalteco'),
    ('GYD', 'Dólar guyanés'),
    ('HKD', 'Dólar de Hong Kong'),
    ('HNL', 'Lempira hondureño'),
    ('HRK', 'Kuna croata'),
    ('HTG', 'Gourde haitiano'),
    ('HUF', 'Forint húngaro'),
    ('IDR', 'Rupiah indonesia'),
    ('ILS', 'Nuevo shéquel israelí'),
    ('INR', 'Rupia india'),
    ('IQD', 'Dinar iraquí'),
    ('IRR', 'Rial iraní'),
    ('ISK', 'Króna islandesa'),
    ('JMD', 'JMD Dólar jamaicano'),
    ('JOD', 'Dinar jordano'),
    ('JPY', 'Yen japonés'),
    ('KES', 'Chelín keniata'),
    ('KGS', 'Som kirguís (de Kirguistán)'),
    ('KHR', 'Riel camboyano'),
    ('KMF', 'Franco comoriano (de Comoras)'),
    ('KPW', 'Won norcoreano'),
    ('KRW', 'Won surcoreano'),
    ('KWD', 'Dinar kuwaití'),
    ('KYD', 'Dólar caimano (de Islas Caimán)'),
    ('KZT', 'Tenge kazajo'),
    ('LAK', 'Kip lao'),
    ('LBP', 'LBP Libra libanesa'),
    ('LKR', 'Rupia de Sri Lanka'),
    ('LRD', 'Dólar liberiano'),
    ('LSL', 'Loti lesotense'),
    ('LTL', 'Litas lituano'),
    ('LVL', 'Lat letón'),
    ('LYD', 'Dinar libio'),
    ('MAD', 'Dirham marroquí'),
    ('MDL', 'Leu moldavo'),
    ('MGA', 'Ariary malgache'),
    ('MKD', 'Denar macedonio'),
    ('MMK', 'Kyat birmano'),
    ('MNT', 'Tughrik mongol'),
    ('MOP', 'Pataca de Macao'),
    ('MRO', 'Ouguiya mauritana'),
    ('MUR', 'Rupia mauricia'),
    ('MVR', 'Rufiyaa maldiva'),
    ('MWK', 'Kwacha malauí'),
    ('MXN', 'Peso mexicano'),
    ('MXV', 'Unidad de Inversión (UDI) mexicana (código de fondos)'),
    ('MYR', 'Ringgit malayo'),
    ('MZN', 'Metical mozambiqueño'),
    ('NAD', 'NAD Dólar namibio'),
    ('NGN', 'Naira nigeriana'),
    ('NIO', 'Córdoba nicaragüense'),
    ('NOK', 'Corona noruega'),
    ('NPR', 'Rupia nepalesa'),
    ('NZD', 'Dólar neozelandés'),
    ('OMR', 'Rial omaní'),
    ('PAB', 'Balboa panameña'),
    ('PEN', 'Nuevo sol peruano'),
    ('PGK', 'Kina de Papúa Nueva Guinea'),
    ('PHP', 'Peso filipino'),
    ('PKR', 'Rupia pakistaní'),
    ('PLN', 'zloty polaco'),
    ('PYG', 'Guaraní paraguayo'),
    ('QAR', 'Rial qatarí'),
    ('RON', 'Leu rumano'),
    ('RUB', 'Rublo ruso'),
    ('RWF', 'Franco ruandés'),
    ('SAR', 'Riyal saudí'),
    ('SBD', 'Dóla de las Islas Salomón'),
    ('SCR', 'Rupia de Seychelles'),
    ('SDG', 'Dinar sudanés'),
    ('SEK', 'Corona Sueca'),
    ('SGD', 'Dólar de Singapur'),
    ('SHP', 'Libra de Santa Helena'),
    ('SLL', 'Leone de Sierra Leona'),
    ('SOS', 'Chelín somalí'),
    ('SRD', 'Dólar surinamés'),
    ('STD', 'Dobra de Santo Tomé y Príncipe'),
    ('SYP', 'Libra suazi'),
    ('SZL', 'Lilangeni suazi'),
    ('THB', 'Baht tailandés'),
    ('TJS', 'Somoni tayik (de Tayikistán)'),
    ('TMT', 'Manat turcomano'),
    ('TND', 'Dinar tunecino'),
    ('TOP', 'Paanga tongano'),
    ('TRY', 'Lira Turca'),
    ('TTD', 'Dólar de Trinidad y Tobago'),
    ('TWD', 'Dólar taiwanés'),
    ('TZS', 'Chelín tanzano'),
    ('UAH', 'Grivna ucraniana'),
    ('UGX', 'Chelín ugandés'),
    ('USD', 'Dólar estadounidense'),
    ('USN', 'Dólar estadounidense (Siguiente día) (código de fondos)'),
    ('USS', 'Dólar estadounidense (Mismo día) (código de fondos)'),
    ('UYU', 'Peso uruguayo'),
    ('UZS', 'Som uzbeko'),
    ('VEF', 'Bolívar fuerte venezolano'),
    ('VND', 'Dong vietnamita'),
    ('VUV', 'Vatu vanuatense'),
    ('WST', 'Tala samoana'),
    ('XAF', 'Franco CFA de África Central'),
    ('XAG', 'Onza de plata'),
    ('XAU', 'Onza de oro'),
    ('XBA', 'European Composite Unit (EURCO) (unidad del mercado de bonos)'),
    ('XBB', 'European Monetary Unit (E.M.U.-6) (unidad del mercado de bonos)'),
    ('XBC', 'European Unit of Account 9 (E.U.A.-9) (unidad del mercado de bonos)'),
    ('XBD', 'European Unit of Account 17 (E.U.A.-17) (unidad del mercado de bonos)'),
    ('XCD', 'Dólar del Caribe Oriental'),
    ('XDR', 'Derechos Especiales de Giro (FMI)'),
    ('XFO', 'Franco de oro (Special settlement currency)'),
    ('XFU', 'Franco UIC (Special settlement currency)'),
    ('XOF', 'Franco CFA de África Occidental'),
    ('XPD', 'Onza de paladio'),
    ('XPF', 'Franco CFP'),
    ('XPT', 'Onza de platino'),
    ('XTS', 'Reservado para pruebas'),
    ('XXX', 'Sin divisa'),
    ('YER', 'Rial yemení (de Yemen)'),
    ('ZAR', 'Rand sudafricano'),
    ('ZMW', 'Kwacha zambiano'),
    ('ZWL', 'Dólar zimbabuense')
)
boucher_choices = (
    ('I', 'Ingreso'),
    ('E', 'Egreso'),
    ('T', 'Traslado'),
    ('N', 'Nómina'),
    ('P', 'Pago')
)
paymentf_choices = (
    ('PUE', 'Un pago'),
    ('PPD', 'Pagos parciales')
)
banks_choices = (
    ('002', 'BANAMEX'),
    ('009', 'BANOBRAS'),
    ('006', 'BANCOMEXT'),
    ('012', 'BBVA BANCOMER'),
    ('014', 'SANTANDER'),
    ('019', 'BANJERCITO'),
    ('021', 'HSBC'),
    ('030', 'BAJIO'),
    ('032', 'IXE'),
    ('036', 'INBURSA'),
    ('037', 'INTERACCIONES'),
    ('042', 'MIFEL'),
    ('044', 'SCOTIABANK'),
    ('058', 'BANREGIO'),
    ('059', 'INVEX'),
    ('060', 'BANSI'),
    ('062', 'AFIRME'),
    ('072', 'BANORTE/IXE'),
    ('102', 'THE ROYAL BANK'),
    ('103', 'AMERICAN EXPRESS'),
    ('106', 'BAMSA'),
    ('108', 'TOKYO'),
    ('110', 'JP MORGAN'),
    ('112', 'BMONEX'),
    ('113', 'VE POR MAS'),
    ('116', 'ING'),
    ('124', 'DEUTSCHE'),
    ('126', 'CREDIT SUISSE'),
    ('127', 'AZTECA'),
    ('128', 'AUTOFIN'),
    ('129', 'BARCLAYS'),
    ('130', 'COMPARTAMOS'),
    ('131', 'BANCO FAMSA'),
    ('132', 'BMULTIVA'),
    ('133', 'ACTINVER'),
    ('134', 'WAL-MART'),
    ('135', 'NAFIN'),
    ('136', 'INTERCAM BANCO'),
    ('137', 'BANCOPPEL'),
    ('138', 'ABC CAPITAL'),
    ('139', 'UBS BANK'),
    ('140', 'CONSUBANCO'),
    ('141', 'VOLKSWAGEN'),
    ('143', 'CIBANCO'),
    ('145', 'BBASE'),
    ('147', 'BANKAOOL'),
    ('148', 'PAGATODO'),
    ('149', 'FORJADORES'),
    ('150', 'INMOBILIARIO'),
    ('151', 'DONDÉ'),
    ('152', 'BANCREA'),
    ('153', 'PROGRESO'),
    ('154', 'BANCO FINTERRA'),
    ('155', 'ICBC'),
    ('156', 'SABADELL'),
    ('157', 'SHINHAN'),
    ('158', 'MIZUHO BANK'),
    ('159', 'BANK OF CHINA'),
    ('160', 'BANCO S3'),
    ('166', 'BANSEFI'),
    ('168', 'HIPOTECARIA FEDERAL'),
    ('600', 'MONEXCB'),
    ('601', 'GBM'),
    ('602', 'MASARI'),
    ('605', 'VALUE'),
    ('606', 'ESTRUCTURADORES'),
    ('607', 'TIBER'),
    ('608', 'VECTOR'),
    ('610', 'B&B'),
    ('614', 'ACCIVAL'),
    ('615', 'MERRILL LYNCH'),
    ('616', 'FINAMEX'),
    ('617', 'VALMEX'),
    ('618', 'UNICA'),
    ('619', 'MAPFRE'),
    ('620', 'PROFUTURO'),
    ('621', 'CB ACTINVER'),
    ('622', 'OACTIN'),
    ('623', 'SKANDIA'),
    ('626', 'CBDEUTSCHE'),
    ('627', 'ZURICH'),
    ('628', 'ZURICHVI'),
    ('629', 'SU CASITA'),
    ('630', 'CB INTERCAM'),
    ('631', 'CI BOLSA'),
    ('632', 'BULLTICK CB'),
    ('633', 'STERLING'),
    ('634', 'FINCOMUN'),
    ('636', 'HDI SEGUROS'),
    ('637', 'ORDER'),
    ('638', 'AKALA'),
    ('640', 'CB JPMORGAN'),
    ('642', 'REFORMA'),
    ('646', 'STP'),
    ('647', 'TELECOMM'),
    ('648', 'EVERCORE'),
    ('649', 'SKANDIA'),
    ('651', 'SEGMTY'),
    ('652', 'ASEA'),
    ('653', 'KUSPIT'),
    ('655', 'SOFIEXPRESS'),
    ('656', 'UNAGRA'),
    ('659', 'OPCIONES EMPRESARIALES DEL NOROESTE'),
    ('670', 'LIBERTAD'),
    ('901', 'CLS'),
    ('902', 'INDEVAL')
)
regime_choices = (
    ('601',	'General de Ley Personas Morales'),
    ('603',	'Personas Morales con Fines no Lucrativos'),
    ('605',	'Sueldos y Salarios e Ingresos Asimilados a Salarios'),
    ('606',	'Arrendamiento'),
    ('608',	'Demás ingresos'),
    ('609',	'Consolidación'),
    ('610',	'Residentes en el Extranjero sin Establecimiento Permanente en México'),
    ('611',	'Ingresos por Dividendos (socios y accionistas)'),
    ('612',	'Personas Físicas con Actividades Empresariales y Profesionales'),
    ('614',	'Ingresos por intereses'),
    ('616',	'Sin obligaciones fiscales'),
    ('620',	'Sociedades Cooperativas de Producción que optan por diferir sus ingresos'),
    ('621',	'Incorporación Fiscal'),
    ('622',	'Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'),
    ('623',	'Opcional para Grupos de Sociedades'),
    ('624',	'Coordinados'),
    ('628',	'Hidrocarburos'),
    ('607',	'Régimen de Enajenación o Adquisición de Bienes'),
    ('629',	'De los Regímenes Fiscales Preferentes y de las Empresas Multinacionales'),
    ('630',	'Enajenación de acciones en bolsa de valores'),
    ('615',	'Régimen de los ingresos por obtención de premios'),
    ('625',	'Régimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas')
)
ucfdi_choices = (
    ('G01',	'Adquisición de mercancias'),
    ('G02',	'Devoluciones, descuentos o bonificaciones'),
    ('G03',	'Gastos en general'),
    ('I01',	'Construcciones'),
    ('I02',	'Mobilario y equipo de oficina por inversiones'),
    ('I03',	'Equipo de transporte'),
    ('I04',	'Equipo de computo y accesorios'),
    ('I05',	'Dados, troqueles, moldes, matrices y herramental'),
    ('I06',	'Comunicaciones telefónicas'),
    ('I07',	'Comunicaciones satelitales'),
    ('I08',	'Otra maquinaria y equipo'),
    ('D01',	'Honorarios médicos, dentales y gastos hospitalarios'),
    ('D02',	'Gastos médicos por incapacidad o discapacidad'),
    ('D03',	'Gastos funerales'),
    ('D04',	'Donativos'),
    ('D05',	'Intereses reales efectivamente pagados por créditos hipotecarios (casa habitación)'),
    ('D06',	'Aportaciones voluntarias al SAR'),
    ('D07',	'Primas por seguros de gastos médicos'),
    ('D08',	'Gastos de transportación escolar obligatoria'),
    ('D09',	'Depósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones'),
    ('D10',	'Pagos por servicios educativos (colegiaturas)'),
    ('P01',	'Por definir')

)
frecuency_choices = (
    ('01',	'Diario'),
    ('02',	'Semanal'),
    ('03',	'Catorcenal'),
    ('04',	'Quincenal'),
    ('05',	'Mensual'),
    ('06',	'Bimestral'),
    ('07',	'Unidad obra'),
    ('08',	'Comisión'),
    ('09',	'Precio alzado'),
    ('10',	'Decenal'),
    ('99',	'Otra periodicidad')
)
job_choices = (
    ('1',	'Clase I'),
    ('2',	'Clase II'),
    ('3',	'Clase III'),
    ('4',	'Clase IV'),
    ('5',	'Clase V'),
    ('99',	'No aplica')
)
contract_choices = (
    ('01',	'Contrato de trabajo por tiempo indeterminado'),
    ('02',	'Contrato de trabajo para obra determinada'),
    ('03',	'Contrato de trabajo por tiempo determinado'),
    ('04',	'Contrato de trabajo por temporada'),
    ('05',	'Contrato de trabajo sujeto a prueba'),
    ('06',	'Contrato de trabajo con capacitación inicial'),
    ('07',	'Modalidad de contratación por pago de hora laborada'),
    ('08',	'Modalidad de trabajo por comisión laboral'),
    ('09',	'Modalidades de contratación donde no existe relación de trabajo'),
    ('10',	'Jubilación, pensión, retiro.'),
    ('99',	'Otro contrato')
)
typej_choices = (
    ('01',	'Diurna'),
    ('02',	'Nocturna'),
    ('03',	'Mixta'),
    ('04',	'Por hora'),
    ('05',	'Reducida'),
    ('06',	'Continuada'),
    ('07',	'Partida'),
    ('08',	'Por turnos'),
    ('99',	'Otra jornada')
)
contract_choices = (
    ('01',	'Contrato de trabajo por tiempo indeterminado'),
    ('02',	'Contrato de trabajo para obra determinada'),
    ('03',	'Contrato de trabajo por tiempo determinado'),
    ('04',	'Contrato de trabajo por temporada'),
    ('05',	'Contrato de trabajo sujeto a prueba'),
    ('06',	'Contrato de trabajo con capacitación inicial'),
    ('07',	'Modalidad de contratación por pago de hora laborada'),
    ('08',	'Modalidad de trabajo por comisión laboral'),
    ('09',	'Modalidades de contratación donde no existe relación de trabajo'),
    ('10',	'Jubilación, pensión, retiro.'),
    ('99',	'Otro contrato')
)
typer_choices = (
    ('02',	'Sueldos (Incluye ingresos señalados en la fracción I del artículo 94 de LISR)'),
    ('03',	'Jubilados'),
    ('04',	'Pensionados'),
    ('05',	'Asimilados Miembros Sociedades Cooperativas Produccion'),
    ('06',	'Asimilados Integrantes Sociedades Asociaciones Civiles'),
    ('07',	'Asimilados Miembros consejos'),
    ('08',	'Asimilados comisionistas'),
    ('09',	'Asimilados Honorarios'),
    ('10',	'Asimilados acciones'),
    ('11',	'Asimilados otros'),
    ('12',	'Jubilados o Pensionados'),
    ('13',	'Indemnización o Separación'),
    ('99',	'Otro Regimen')
)
payroll_choices = (
    ('O',	'Nómina ordinaria'),
    ('E',	'Nómina extraordinaria'),
)
keye_choices = (
    ('AGU', 'Aguascalientes'),
    ('BCN', 'Baja California'),
    ('BCS', 'Baja California Sur'),
    ('CAM', 'Campeche'),
    ('CHP', 'Chiapas'),
    ('CHH', 'Chihuahua'),
    ('COA', 'Coahuila'),
    ('COL', 'Colima'),
    ('DIF', 'Ciudad de México'),
    ('DUR', 'Durango'),
    ('GUA', 'Guanajuato'),
    ('GRO', 'Guerrero'),
    ('HID', 'Hidalgo'),
    ('JAL', 'Jalisco'),
    ('MEX', 'Estado de México'),
    ('MIC', 'Michoacán'),
    ('MOR', 'Morelos'),
    ('NAY', 'Nayarit'),
    ('NLE', 'Nuevo León'),
    ('OAX', 'Oaxaca'),
    ('PUE', 'Puebla'),
    ('ROO', 'Quintana Roo'),
    ('SLP', 'San Luis Potosí'),
    ('SIN', 'Sinaloa'),
    ('SON', 'Sonora'),
    ('TAB', 'Tabasco'),
    ('TAM', 'Tamaulipas'),
    ('TLA', 'Tlaxcala'),
    ('VER', 'Veracruz'),
    ('YUC', 'Yucatán'),
    ('ZAC', 'Zacatecas'),
    ('AL', 'Alabama'),
    ('AK', 'Alaska'),
    ('AZ', 'Arizona'),
    ('AR', 'Arkansas'),
    ('CA', 'California'),
    ('NC', 'California del norte'),
    ('SC', 'California del sur'),
    ('CO', 'Colorado'),
    ('CT', 'Connecticut'),
    ('ND', 'Dakota del norte'),
    ('SD', 'Dakota del sur'),
    ('DE', 'Delaware'),
    ('FL', 'Florida'),
    ('GA', 'Georgia'),
    ('HI', 'Hawái'),
    ('ID', 'Idaho'),
    ('IL', 'Illinois'),
    ('IN', 'Indiana'),
    ('IA', 'Iowa'),
    ('KS', 'Kansas'),
    ('KY', 'Kentucky'),
    ('LA', 'Luisiana'),
    ('ME', 'Maine'),
    ('MD', 'Maryland'),
    ('MA', 'Massachusetts'),
    ('MI', 'Míchigan'),
    ('MN', 'Minnesota'),
    ('MS', 'Misisipi'),
    ('MO', 'Misuri'),
    ('MT', 'Montana'),
    ('NE', 'Nebraska'),
    ('NV', 'Nevada'),
    ('NJ', 'Nueva Jersey'),
    ('NY', 'Nueva York'),
    ('NH', 'Nuevo Hampshire'),
    ('NM', 'Nuevo México'),
    ('OH', 'Ohio'),
    ('OK', 'Oklahoma'),
    ('OR', 'Oregón'),
    ('PA', 'Pensilvania'),
    ('RI', 'Rhode Island'),
    ('TN', 'Tennessee'),
    ('TX', 'Texas'),
    ('UT', 'Utah'),
    ('VT', 'Vermont'),
    ('VA', 'Virginia'),
    ('WV', 'Virginia Occidental'),
    ('WA', 'Washington'),
    ('WI', 'Wisconsin'),
    ('ON', 'Ontario'),
    ('OC', 'Quebec'),
    ('NS', 'Nueva Escocia'),
    ('NB', 'Nuevo Brunswick'),
    ('MB', 'Manitoba'),
    ('BC', 'Columbia Británica'),
    ('PE', 'Isla del príncipe Eduardo'),
    ('SK', 'Saskatchewan'),
    ('AB', 'Alberta'),
    ('NL', 'Terranova y Labrador'),
    ('NT', 'Territorios del Noroeste'),
    ('YT', 'Yukón'),
    ('UN', 'Nunayut'),
)
typep_choices = (
    ('001',	'Sueldos, Salarios  Rayas y Jornales'),
    ('002',	'Gratificación Anual (Aguinaldo)'),
    ('003',	'Participación de los Trabajadores en las Utilidades PTU'),
    ('004',	'Reembolso de Gastos Médicos Dentales y Hospitalarios'),
    ('005',	'Fondo de Ahorro'),
    ('006',	'Caja de ahorro'),
    ('009',	'Contribuciones a Cargo del Trabajador Pagadas por el Patrón'),
    ('010',	'Premios por puntualidad'),
    ('011',  'Prima de Seguro de vida'),
    ('012',	'Seguro de Gastos Médicos Mayores'),
    ('013',	'Cuotas Sindicales Pagadas por el Patrón'),
    ('014',	'Subsidios por incapacidad'),
    ('015',	'Becas para trabajadores y/o hijos'),
    ('019',	'Horas extra'),
    ('020',	'Prima dominical'),
    ('021',	'Prima vacacional'),
    ('022',	'Prima por antigüedad'),
    ('023',	'Pagos por separación'),
    ('024',	'Seguro de retiro'),
    ('025',	'Indemnizaciones'),
    ('026',	'Reembolso por funeral'),
    ('027',	'Cuotas de seguridad social pagadas por el patrón'),
    ('028',	'Comisiones'),
    ('029',	'Vales de despensa'),
    ('030',	'Vales de restaurante'),
    ('031',	'Vales de gasolina'),
    ('032',	'Vales de ropa'),
    ('033',	'Ayuda para renta'),
    ('034',	'Ayuda para artículos escolares'),
    ('035',	'Ayuda para anteojos'),
    ('036',	'Ayuda para transporte'),
    ('037',	'Ayuda para gastos de funeral'),
    ('038',	'Otros ingresos por salarios'),
    ('039',	'Jubilaciones, pensiones o haberes de retiro'),
    ('044',	'Jubilaciones, pensiones o haberes de retiro en parcialidades'),
    ('045',	'Ingresos en acciones o títulos valor que representan bienes'),
    ('046',	'Ingresos asimilados a salarios'),
    ('047',	'Alimentación diferentes a los establecidos en el Art 94 último párrafo LISR'),
    ('048',	'Habitación'),
    ('049',	'Premios por asistencia'),
    ('050',	'Viáticos'),
    ('051',	'Pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades'),
    ('052',	'Pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de resoluciones judicial o de un laudo'),
    ('053',	'Pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de resoluciones judicial o de un laudo'),
)
typed_choices = (
    ('001',	'Seguridad social'),
    ('002',	'ISR'),
    ('003',	'Aportaciones a retiro, cesantía en edad avanzada y vejez.'),
    ('004',	'Otros'),
    ('005',	'Aportaciones a Fondo de vivienda'),
    ('006',	'Descuento por incapacidad'),
    ('007',	'Pensión alimenticia'),
    ('008',	'Renta'),
    ('009',	'Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores'),
    ('010',	'Pago por crédito de vivienda'),
    ('011',	'Pago de abonos INFONACOT'),
    ('012',	'Anticipo de salarios'),
    ('013',	'Pagos hechos con exceso al trabajador'),
    ('014',	'Errores'),
    ('015',	'Pérdidas'),
    ('016',	'Averías'),
    ('017',	'Adquisición de artículos producidos por la empresa o establecimiento'),
    ('018',	'Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro'),
    ('019',	'Cuotas sindicales'),
    ('020',	'Ausencia (Ausentismo)'),
    ('021',	'Cuotas obrero patronales'),
    ('022',	'Impuestos Locales'),
    ('023',	'Aportaciones voluntarias'),
    ('024',	'Ajuste en Gratificación Anual (Aguinaldo) Exento'),
    ('025',	'Ajuste en Gratificación Anual (Aguinaldo) Gravado'),
    ('026',	'Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento'),
    ('027',	'Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado'),
    ('028',	'Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento'),
    ('029',	'Ajuste en Fondo de ahorro Exento'),
    ('030',	'Ajuste en Caja de ahorro Exento'),
    ('031',	'Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento'),
    ('032',	'Ajuste en Premios por puntualidad Gravado'),
    ('033',	'Ajuste en Prima de Seguro de vida Exento'),
    ('034',	'Ajuste en Seguro de Gastos Médicos Mayores Exento'),
    ('035',	'Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento'),
    ('036',	'Ajuste en Subsidios por incapacidad Exento'),
    ('037',	'Ajuste en Becas para trabajadores y/o hijos Exento'),
    ('038',	'Ajuste en Horas extra Exento'),
    ('039',	'Ajuste en Horas extra Gravado'),
    ('040',	'Ajuste en Prima dominical Exento'),
    ('041',	'Ajuste en Prima dominical Gravado'),
    ('042',	'Ajuste en Prima vacacional Exento'),
    ('043',	'Ajuste en Prima vacacional Gravado'),
    ('044',	'Ajuste en Prima por antigüedad Exento'),
    ('045',	'Ajuste en Prima por antigüedad Gravado'),
    ('046',	'Ajuste en Pagos por separación Exento'),
    ('047',	'Ajuste en Pagos por separación Gravado'),
    ('048',	'Ajuste en Seguro de retiro Exento'),
    ('049',	'Ajuste en Indemnizaciones Exento'),
    ('050',	'Ajuste en Indemnizaciones Gravado'),
    ('051',	'Ajuste en Reembolso por funeral Exento'),
    ('052',	'Ajuste en Cuotas de seguridad social pagadas por el patrón Exento'),
    ('053',	'Ajuste en Comisiones Gravado'),
    ('054',	'Ajuste en Vales de despensa Exento'),
    ('055',	'Ajuste en Vales de restaurante Exento'),
    ('056',	'Ajuste en Vales de gasolina Exento'),
    ('057',	'Ajuste en Vales de ropa Exento'),
    ('058',	'Ajuste en Ayuda para renta Exento'),
    ('059',	'Ajuste en Ayuda para artículos escolares Exento'),
    ('060',	'Ajuste en Ayuda para anteojos Exento'),
    ('061',	'Ajuste en Ayuda para transporte Exento'),
    ('062',	'Ajuste en Ayuda para gastos de funeral Exento'),
    ('063',	'Ajuste en Otros ingresos por salarios Exento'),
    ('064',	'Ajuste en Otros ingresos por salarios Gravado'),
    ('065',	'Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibición Exento'),
    ('066',	'Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibición Gravado'),
    ('067',	'Ajuste en Pagos por separación Acumulable'),
    ('068',	'Ajuste en Pagos por separación No acumulable'),
    ('069',	'Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Exento')
    ('070',	'Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Gravado'),
    ('071',	'Ajuste en Subsidio para el empleo (efectivamente entregado al trabajador)'),
    ('072',	'Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento'),
    ('073',	'Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado'),
    ('074',	'Ajuste en Alimentación Exento'),
    ('075',	'Ajuste en Alimentación Gravado'),
    ('076',	'Ajuste en Habitación Exento'),
    ('077',	'Ajuste en Habitación Gravado'),
    ('078',	'Ajuste en Premios por asistencia'),
    ('079',	'Ajuste en Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados.'),
    ('080',	'Ajuste en Viáticos gravados'),
    ('081',	'Ajuste en Viáticos (entregados al trabajador)'),
    ('082',	'Ajuste en Fondo de ahorro Gravado'),
    ('083',	'Ajuste en Caja de ahorro Gravado'),
    ('084',	'Ajuste en Prima de Seguro de vida Gravado'),
    ('085',	'Ajuste en Seguro de Gastos Médicos Mayores Gravado'),
    ('086',	'Ajuste en Subsidios por incapacidad Gravado'),
    ('087',	'Ajuste en Becas para trabajadores y/o hijos Gravado'),
    ('088',	'Ajuste en Seguro de retiro Gravado'),
    ('089',	'Ajuste en Vales de despensa Gravado'),
    ('090',	'Ajuste en Vales de restaurante Gravado'),
    ('091',	'Ajuste en Vales de gasolina Gravado'),
    ('092',	'Ajuste en Vales de ropa Gravado'),
    ('093',	'Ajuste en Ayuda para renta Gravado'),
    ('094',	'Ajuste en Ayuda para artículos escolares Gravado'),
    ('095',	'Ajuste en Ayuda para anteojos Gravado'),
    ('096',	'Ajuste en Ayuda para transporte Gravado'),
    ('097',	'Ajuste en Ayuda para gastos de funeral Gravado'),
    ('098',	'Ajuste a ingresos asimilados a salarios gravados'),
    ('099',	'Ajuste a ingresos por sueldos y salarios gravados'),
    ('100',	'Ajuste en Viáticos exentos'),
    ('101',	'ISR Retenido de ejercicio anterior'),
    ('102',	'Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades, gravados'),
    ('103',	'Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo gravados'),
    ('104',	'Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo exentos'),
    ('105',	'Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo gravados'),
    ('106',	'Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo exentos'),
    ('107',	'Ajuste al Subsidio Causado'),

)
typeo_choices = (
    ('001'	'Reintegro de ISR pagado en exceso (siempre que no haya sido enterado al SAT).'),
    ('002',	'Subsidio para el empleo (efectivamente entregado al trabajador).'),
    ('003',	'Viáticos (entregados al trabajador).'),
    ('004',	'Aplicación de saldo a favor por compensación anual.'),
    ('005',	'Reintegro de ISR retenido en exceso de ejercicio anterior (siempre que no haya sido enterado al SAT).'),
    ('006',	'Alimentos en bienes (Servicios de comedor y comida) Art 94 último párrafo LISR.'),
    ('007',	'ISR ajustado por subsidio.'),
    ('008',	'Subsidio efectivamente entregado que no correspondía (Aplica sólo cuando haya ajuste al cierre de mes en relación con el Apéndice 7 de la guía de llenado de nómina).'),
    ('009',	'Reembolso de descuentos efectuados para el crédito de vivienda.'),
    ('9999', 'Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados.'),

)
class CFDI(models.Model):
    version = models.CharField(max_length=4)
    serie = models.CharField(max_length=2, null=True)
    folio = models.CharField(max_length=7, null=True)
    date = models.DateTimeField(auto_now_add=False)
    payment_form = models.CharField(max_length=2, choices=payment_choices, null=True)  # forma de pago
    terms_of_payment = models.CharField(max_length=1000, null=True)  # condiciones de pago
    subtotal = models.FloatField()  # subtotal
    discount = models.FloatField(null=True)  # descuento
    currency = models.CharField(max_length=2, choices=coin_choices)
    type_change = models.FloatField(null=True)  # tipo de cambio
    total = models.FloatField()
    type_ = models.CharField(max_length=1, choices=boucher_choices)  # tipo de comprobante
    payment_method = models.CharField(max_length=2, choices=paymentf_choices)  # método de pago
    code_postal = models.CharField(max_length=5)
    name_issuer = models.CharField(max_length=20, null=True) #nombre emisor
    rfc_issuer = models.CharField(max_length=13) #rfc emisor
    fiscal_regime = models.CharField(max_lenth=3, choices = regime_choices) #regimen fiscal
    name_receiver = models.CharField(max_length=20, null=True)#nombre de receptor
    rfc_receiver = models.CharField(max_length=13)#rfc receptor
    use_cfdi = models.CharField(max_length=3, choices=ucfdi_choices)
    uuid = models.CharField(max_length=34)
    date_stamped = models.DateTimeField(auto_now_add=False)
    employee = models.ForeignKey(Employee, on_delete=CASCADE)
    business = models.ForeignKey(Business, on_delete=CASCADE)

class PayRoll(models.Model):
    version = models.CharField(max_length=3)
    start_date = models.DateTimeField(auto_now_add=False) #fecha de inicio de pago
    end_date = models.DateTimeField(auto_now_add=False) #fecha de fin de pago
    payment_date = models.DateTimeField(auto_now_add=False) #fecha de pago
    number_days = models.CharField(max_length=2) #numero de días pagados
    type_payroll = models.CharField(choices=payroll_choices)#tipo de nomina
    total_p = models.FloatField() #total de percepciones
    total_d = models.FloatField()#total de deducciones
    total_o = models.FloatField()#total otros pagos
    key_ent_fed = models.CharField(max_length=5, choices=keye_choices) #ClaveEntFed
    bank = models.CharField(max_length=2, choices=banks_choices)
    payment_frecuency = models.CharField(max_length=2, choices=frecuency_choices) #periodicidad de pago
    job_risk = models.CharField(max_length=2, choices=job_choices)#riesgo de puesto
    type_c = models.CharField(max_length=2, choices=contract_choices)#tipo de contrato
    type_j = models.CharField(max_length=2, choices=typej_choices)#tipo de jornada
    type_r =models.CharField(max_length=2, choices=typer_choices) #tipo de régimen
    total_ex = models.FloatField()
    total_grav = models.FloatField()
    total_salary = models.FloatField()
    total_impr = models.FloatField() #total impuestos retenidos
    total_od = models.FloatField() #total otras deducciones
    total_op = models.FloatField() #total otros pagos
    cfdi = models.ForeignKey(CFDI, on_delete=CASCADE)
    
class Perception(models.Model):
    payroll = models.ForeignKey(PayRoll, on_delete=CASCADE)
    code = models.CharField(max_length=15)
    concept = models.CharField(max_length=50)
    exempt_import = models.FloatField() #importe excento
    import_g = models.FloatField()#importe gravado
    type_p = models.CharField(max_length=3 ,choices=typep_choices)

class Deduction(models.Model):
    payroll = models.ForeignKey(PayRoll, on_delete=CASCADE)
    code = models.CharField(max_length=15)
    concept = models.CharField(max_length=50)
    import_d = models.FloatField() #importe excento
    type_d = models.CharField(max_length=3 ,choices=typed_choices)

class OtherPayment(models.Model):
    payroll = models.ForeignKey(PayRoll, on_delete=CASCADE)
    code = models.CharField(max_length=15)
    concept = models.CharField(max_length=50)
    import_d = models.FloatField() #importe excento
    type_o = models.CharField(max_length=3 ,choices=typeo_choices)
